networks:
  monitoring:
    driver: bridge
    
volumes:
  prometheus_data:
  grafana_storage:

services:
   notes-app:
     build:
       context: django-notes-app-dev/.
     container_name: notes-app
     ports:
       - "8000:8000"
     networks:
       - monitoring

   prometheus:
     image: prom/prometheus:latest
     container_name: prometheus
     restart: unless-stopped
     volumes:
       - ./prometheus.yml:/etc/prometheus/prometheus.yml
       - prometheus_data:/prometheus
     command:
       - '--config.file=/etc/prometheus/prometheus.yml'
       - '--storage.tsdb.path=/prometheus'
       - '--web.console.libraries=/etc/prometheus/console_libraries'
       - '--web.console.templates=/etc/prometheus/consoles'
       - '--web.enable-lifecycle'
     expose:
       - "9090:9090"
     networks:
       - monitoring

   grafana:
     image: grafana/grafana-enterprise
     container_name: grafana
     restart: unless-stopped
     environment:
       - GF_SECURITY_ADMIN_USER=admin
       - GF_SECURITY_ADMIN_PASSWORD=admin
       - GF_SERVER_ROOT_URL=http://my.grafana.server/
       - GF_PLUGINS_PREINSTALL=grafana-clock-panel
     ports:
       - "3001:3000"
     volumes:
       - 'grafana_storage:/var/lib/grafana'
     networks:
       - monitoring
     depends_on:
       - prometheus

   cadvisor:
     image: gcr.io/cadvisor/cadvisor:latest
     container_name: cadvisor_container
     restart: unless-stopped
     ports:
       - "8081:8080"
     volumes:
       - /:/rootfs:ro
       - /var/run:/var/run:rw
       - /sys:/sys:ro
       - /var/lib/docker/:/var/lib/docker:ro
       - /dev/disk/:/dev/disk:ro
     networks:
       - monitoring
     command:
       - --port=8080

   node_exporter:
     image: prom/node-exporter:latest
     container_name: node_exporter
     restart: unless-stopped
     ports:
       - "9200:9100"
     volumes:
       - '/:/host:ro,rslave'
     command:
       - '--path.rootfs=/host'
     pid: host
     networks:
       - monitoring
